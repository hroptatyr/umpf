%{
typedef struct umpf_tag_s *umpf_tag_t;

/* all them tags we understand */
typedef enum {
	/* must be first */
	UMPF_TAG_UNK,
	/* alphabetic list of tags */
	UMPF_TAG_AMT,
	UMPF_TAG_BATCH,
	UMPF_TAG_FIXML,
	UMPF_TAG_GLUE,
	UMPF_TAG_INSTRMT,

	UMPF_TAG_POS_RPT,
	UMPF_TAG_PTY,
	UMPF_TAG_QTY,
	UMPF_TAG_REQ_FOR_POSS,
	UMPF_TAG_REQ_FOR_POSS_ACK,

	UMPF_TAG_RG_DTL,
	UMPF_TAG_RGST_INSTRCTNS,
	UMPF_TAG_RGST_INSTRCTNS_RSP,

	UMPF_TAG_SEC_DEF,
	UMPF_TAG_SEC_DEF_REQ,
	UMPF_TAG_SEC_DEF_UPD,
	UMPF_TAG_SEC_XML,
	UMPF_TAG_SUB,

} umpf_tid_t;

%}
%7bit
%readonly-tables
%struct-type
%define slot-name tag
%define hash-function-name __tid_hash
%define lookup-function-name __tiddify
%null-strings
%enum

struct umpf_tag_s {
	const char *tag;
	umpf_tid_t tid;
};

%%
Amt,	UMPF_TAG_AMT
Batch,	UMPF_TAG_BATCH
FIXML,	UMPF_TAG_FIXML
Instrmt,	UMPF_TAG_INSTRMT
PosRpt,	UMPF_TAG_POS_RPT
Pty,	UMPF_TAG_PTY
Qty,	UMPF_TAG_QTY
ReqForPoss,	UMPF_TAG_REQ_FOR_POSS
ReqForPossAck,	UMPF_TAG_REQ_FOR_POSS_ACK
RgDtl,	UMPF_TAG_RG_DTL
RgstInstrctns,	UMPF_TAG_RGST_INSTRCTNS
RgstInstrctnsRsp,	UMPF_TAG_RGST_INSTRCTNS_RSP
SecDef,	UMPF_TAG_SEC_DEF
SecDefReq,	UMPF_TAG_SEC_DEF_REQ
SecDefUpd,	UMPF_TAG_SEC_DEF_UPD
SecXML,	UMPF_TAG_SEC_XML
Sub,	UMPF_TAG_SUB
glue,	UMPF_TAG_GLUE
